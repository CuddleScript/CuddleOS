---
# My own Shizz

- name: Create the `aur_builder` user
  become: yes
  ansible.builtin.user:
     name: aur_builder
     create_home: yes
     group: wheel

- name: Allow the `aur_builder` user to run `sudo pacman` without a password
  become: yes
  ansible.builtin.lineinfile:
     path: /etc/sudoers.d/11-install-aur_builder
     line: 'aur_builder ALL=(ALL) NOPASSWD: /usr/bin/pacman'
     create: yes
     mode: 0644
     validate: 'visudo -cf %s'

- name: Install Misc Packages
  include_vars:
     file: '../lists/sarah_lists.yml'

- name: Install Basic Packages
  kewlfft.aur.aur:
     use: yay
     name: '{{ misc_packages }}'
     state: present

- name: Enable Misc Package Services
  ansible.builtin.service:
     name: '{{ misc_services }}'
     enabled: yes

- name: Disable Systemd-oomd
  ansible.builtin.service:
     name: 'systemd-oomd'
     enabled: no

- name: Setting up I/O Schedulers
  become: yes
  template:
     src: ./../templates/60-ioschedulers.rules.j2
     dest: /etc/udev/rules.d/60-ioschedulers.rules

- name: Enable keyring timer
  become: yes
  ansible.builtin.service:
     name: 'archlinux-keyring-wkd-sync.timer'
     enabled: yes

- name: Pacman Conig Tweaks
  become: yes
  ansible.builtin.lineinfile:
     path: /etc/pacman.conf
     regexp: '/#ParallelDownloads/i'
     line: 'ParallelDownloads=6 \n DisableDownloadTimeout'

- name: Enable Realtime privliedges
  become: yes
  shell: 'sudo usermod -aG realtime "$(whoami)"'

- name: change environment
  become: yes
  shell: |
     echo "mesa_glthread=true" | sudo tee /etc/environment && \
     echo "__GL_THREADED_OPTIMIZATIONS=1" | sudo tee /etc/environmen

- name: Get supported version
  shell: /lib/ld-linux-x86-64.so.2 --help | grep -m 1 "supported" | awk '{match($0, /[a-z0-9-]+/); print substr($0, RSTART, RLENGTH)}'
  register: packageversions

- name: Install EEDVF Kernel
  become: yes
